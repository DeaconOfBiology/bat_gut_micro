indic_taxa=paste(unique(`Indicator taxa`),collapse = " - "),
n_bat_host=n_distinct(host),
bat_host=paste(unique(host),collapse = " - "))
v_mag_indicator_reps_agger
v_mag_indicator_reps_agger%>%
group_by(bat_host)%>%
summarise(n_mags=n_distinct(clean_MAG),
n_mOTUs=sum(n_mOTU_ID))
length(unique(v_mag_indicator_reps$OTU_ID))
length(unique(v_mag_indicator_reps$MAG))
v_mag_indicator_reps%>%
group_by(bat_host)%>%
summarise(n_mags=n_distinct(clean_MAG),
n_mOTUs=sum(n_mOTU_ID))
v_mag_indicator_reps%>%
group_by(host)%>%
summarise(n_mags=n_distinct(clean_MAG),
n_mOTUs=n_distinct(OTU_ID))
v_mag_indicator_reps%>%
aggregate(cbind(`Indicator taxa`,host)~clean_MAG, function(x)paste(unique(x), collapse = " - "))
v_mag_indicator_reps_agger
sum(v_mag_indicator_reps_agger$n_bat_host)
sum(v_mag_indicator_reps_agger$n_mOTU_ID)
nique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(host)%>%
summarise(n_mags=n_distinct(clean_MAG),
n_mOTUs=n_distinct(OTU_ID))
unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(host)%>%
summarise(n_mags=n_distinct(clean_MAG),
n_mOTUs=n_distinct(OTU_ID))
nique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%%>%
nique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
aggregate(cbind(`Indicator taxa`,host)~clean_MAG, function(x)paste(unique(x), collapse = " - "))
unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
aggregate(cbind(`Indicator taxa`,host)~clean_MAG, function(x)paste(unique(x), collapse = " - "))
test<-unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
aggregate(cbind(`Indicator taxa`,host)~clean_MAG, function(x)paste(unique(x), collapse = " - "))
unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])
v_mag_indicator_reps_agger<- unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(clean_MAG)%>%
summarise(n_mOTU_ID=n_distinct(OTU_ID),
n_indic_taxa=n_distinct(`Indicator taxa`),
indic_taxa=paste(unique(`Indicator taxa`),collapse = " - "),
n_bat_host=n_distinct(host),
bat_host=paste(unique(host),collapse = " - "))
v_mag_indicator_reps_agger
sum(v_mag_indicator_reps_agger$n_mOTU_ID)
view(v_mag_indicator_reps)
view(unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")]))
View(mag_stats)
view(v_mag_indicator_reps)
length(unique(v_mag_indicator_reps$MAG))
v_mag_indicator_reps
length(unique(v_mag_indicator_reps$MAG
)
)
length(unique(v_mag_indicator_reps$OTU_ID))
length(unique(v_mag_indicator_reps$OTU_ID))
length(unique(v_mag_indicator_reps$MAG))
# SingleM reps in p-h pairing
#MAG representatives of the singleM indicators
v_mag_indicator_reps<-fread("../../data/results/tables/mag_motu_indicator_reps_pha.csv")
v_mag_indicator_reps_agger<- unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(clean_MAG)%>%
summarise(n_mOTU_ID=n_distinct(OTU_ID),
n_indic_taxa=n_distinct(`Indicator taxa`),
indic_taxa=paste(unique(`Indicator taxa`),collapse = " - "),
n_bat_host=n_distinct(host),
bat_host=paste(unique(host),collapse = " - "))
v_mag_indicator_reps
#MAG representatives of the singleM indicators
v_mag_indicator_reps<-fread("../../data/results/tables/mag_motu_indicator_reps_pha.csv")%>%
rename("OTU_ID"="sequence")
v_mag_indicator_reps_agger<- unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(clean_MAG)%>%
summarise(n_mOTU_ID=n_distinct(OTU_ID),
n_indic_taxa=n_distinct(`Indicator taxa`),
indic_taxa=paste(unique(`Indicator taxa`),collapse = " - "),
n_bat_host=n_distinct(host),
bat_host=paste(unique(host),collapse = " - "))
test<-unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
aggregate(cbind(`Indicator taxa`,host)~clean_MAG, function(x)paste(unique(x), collapse = " - "))
unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(host)%>%
summarise(n_mags=n_distinct(clean_MAG),
n_mOTUs=n_distinct(OTU_ID))
test
length(unique(v_mag_indicator_reps$OTU_ID))
length(unique(v_mag_indicator_reps$MAG)
)
library(data.table)
library(data.table)
library(tidyverse)
library(phyloseq)
# Iphope and phase virus-host predictions #
###########################################
ip_ph_compare<-fread("../../data/results/tables/iphop_phase_compare.csv")
ip_ph_compare_w_indicators<-fread("../../data/results/tables/ip_ph_compare_with_indicator_info.csv")
# IPhop and phase virus-host predictions at the taxonomic level #
#################################################################
ip_ph_compare_taxa<-fread("../../data/results/tables/iphop_phase_compare_taxa_level.csv")
# Host Phylum target frequency #
################################
# Compute the aggregate and filter
df_filtered <- unique(ip_ph_compare[, c("MAG", "phylum")]) %>%
mutate(num_mags=1)%>%
aggregate(num_mags ~ phylum, sum) %>%
arrange(desc(num_mags)) %>%
filter(num_mags >= 10)
# Wrap each phylum with asterisks for italics in Markdown
df_filtered$phylum <- paste0("*", df_filtered$phylum, "*")
# Create nicely formatted strings for phyla and their corresponding num_mags
join_with_and <- function(x) {
if(length(x) > 1){
paste(paste(x[-length(x)], collapse = ", "), "and", x[length(x)])
} else {
x
}
}
phy_string <- join_with_and(df_filtered$phylum)
mags_string <- join_with_and(df_filtered$num_mags)
host_fam_count<-unique(ip_ph_compare_taxa[, c("phylum", "host_family","num_mags")])%>%
arrange(desc(num_mags)) %>%
mutate(phylum=paste0("*", phylum, "*"),
host_family=paste0("*", host_family, "*"))%>%
filter(phylum %in%df_filtered$phylum)
fam_string_join<-function(df,phy){
phy_select<-df%>%
filter(phylum==phy)%>%
{ if (any(.$num_mags >= 5)) {
filter(., num_mags >= 5)
} else {
filter(., num_mags == max(num_mags))
}
}
fam_join<-join_with_and(phy_select$host_family)
num_join<-join_with_and(phy_select$num_mags)
return(list(fam_join,num_join))
}
# Table of phage-host pairing
table_df <- as.data.frame(table(ip_ph_compare$lifestyle, ip_ph_compare$iphop, ip_ph_compare$phase))%>%
subset(Freq!=0)
names(table_df) <- c("lifestyle", "iphop", "phase", "Freq")
table_df<-table_df%>%
mutate(prediction=case_when(iphop==TRUE&phase==TRUE~"both",
iphop==TRUE&phase==FALSE~"iphop",
iphop==FALSE&phase==TRUE~"phase"))%>%
select(-iphop,-phase)%>%
group_by(prediction) %>%
mutate(percent_within_group = round(Freq / sum(Freq) * 100)) %>%
ungroup()
# SingleM reps in p-h pairing
#MAG representatives of the singleM indicators
v_mag_indicator_reps<-fread("../../data/results/tables/mag_motu_indicator_reps_pha.csv")%>%
rename("OTU_ID"="sequence")
v_mag_indicator_reps_agger<- unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(clean_MAG)%>%
summarise(n_mOTU_ID=n_distinct(OTU_ID),
n_indic_taxa=n_distinct(`Indicator taxa`),
indic_taxa=paste(unique(`Indicator taxa`),collapse = " - "),
n_bat_host=n_distinct(host),
bat_host=paste(unique(host),collapse = " - "))
test<-unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
aggregate(cbind(`Indicator taxa`,host)~clean_MAG, function(x)paste(unique(x), collapse = " - "))
unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(host)%>%
summarise(n_mags=n_distinct(clean_MAG),
n_mOTUs=n_distinct(OTU_ID))
length(unique(v_mag_indicator_reps$MAG)
)
length(unique(v_mag_indicator_reps$OTU_ID))
view(v_mag_indicator_reps)
length(unique(ip_ph_compare$vOTU)
)
length(unique(v_mag_indicator_reps$vOTU))/length(unique(ip_ph_compare$vOTU))*100
round(length(unique(v_mag_indicator_reps$vOTU))/length(unique(ip_ph_compare$vOTU))*100)
length(unique(v_mag_indicator_reps$vOTU))
length(unique(single_otu$marker))
# Before rarifaction
single_otu<-fread("../../data/results/tables/singlem_taxa.csv")
# After rarifaction
#Calling in phyloseq object
rel_abun_phy<-readRDS("../../data/results/tables/singleM__rarefied_phy.rds")
length(unique(single_otu$marker))
nrow(otu_table(rel_abun_phy))
# Indicator species analysis results for singlem
sm_indic<-fread("../../data/results/tables/bat_gut_singlem_indicator_sp.csv")
view(sm_indic)
length(unique(ind_sp$OTU_ID))
ind_sp
names(ind_sp)
#Calling in indicator analysis csv
ind_sp<-fread("../../data/results/tables/median_final_indicator_table.csv")%>%
mutate(across(`Mimon crenulatum`:`Phyllostomus hastatus`, ~as.numeric(gsub("\\*\\*", "", .))))
ind_sp
view(ind_sp)
sum(ind_sp$total_mOTUs)
length(sm_indic$OTU_ID)
round(length(unique(v_mag_indicator_reps$OTU_ID))/sum(ind_sp$total_mOTUs)*100)
v_mag_indicator_reps
ip_ph_compare_taxa
ip_ph_compare
round(length(unique(v_mag_indicator_reps$MAG))/ip_ph_compare*100)
length(unique(v_mag_indicator_reps$MAG))
length(unique(ip_ph_compare$clean_MAG))
length(unique(ip_ph_compare$MAG))
round(length(unique(v_mag_indicator_reps$MAG))/length(unique(ip_ph_compare$MAG))*100)
v_mag_indicator_reps
names(v_mag_indicator_reps)
length(unique(v_mag_indicator_reps$MAG))
round(length(unique(v_mag_indicator_reps$vOTU))/length(unique(ip_ph_compare$vOTU))*100)
length(unique(ip_ph_compare$vOTU))
length(unique(ip_ph_compare$MAG))
unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(host)%>%
summarise(n_mags=n_distinct(clean_MAG),
n_mOTUs=n_distinct(OTU_ID))
test
nrow(test)
length(unique(test$clean_MAG))
unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(host)%>%
summarise(n_mags=n_distinct(clean_MAG),
n_mOTUs=n_distinct(OTU_ID))
unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])
indicator_species_mag_count<-unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
aggregate(cbind(`Indicator taxa`,host)~clean_MAG, function(x)paste(unique(x), collapse = " - "))
indicator_species_mag_count
nrow(indicator_species_mag_count[indicator_species_mag_count$host=="Mimon crenulatum",])
nrow(indicator_species_mag_count[indicator_species_mag_count$host=="Phyllostomus hastatus",])
indicator_species_mag_count
view(v_mag_indicator_reps)
names(v_mag_indicator_reps)
#MAG representatives of the singleM indicators
v_mag_indicator_reps<-fread("../../data/results/tables/mag_motu_indicator_reps_pha.csv")%>%
rename("OTU_ID"="sequence")%>%
select(clean_MAG:species,`Indicator taxa`,vOTU,viral_tax,lifestyle,iphop,phase,host)%>%
unique
view(v_mag_indicator_reps)
#MAG representatives of the singleM indicators
v_mag_indicator_reps<-fread("../../data/results/tables/mag_motu_indicator_reps_pha.csv")%>%
rename("OTU_ID"="sequence")%>%
select(clean_MAG:species,`Indicator taxa`,vOTU,viral_tax,lifestyle,iphop,phase,host)%>%
unique%>%
mutate(ph_prediction=case_when(iphop=="TRUE"&phase=="TRUE"~"both",
iphop=="TRUE"&phase=="FALSE"~"iphop",
iphop=="FALSE"&phase=="TRUE"~"phase"))%>%
select(-iphop,-phase)
view(v_mag_indicator_reps)
round(length(unique(v_mag_indicator_reps$MAG))/length(unique(ip_ph_compare$MAG))*100)
#MAG representatives of the singleM indicators
v_mag_indicator_reps<-fread("../../data/results/tables/mag_motu_indicator_reps_pha.csv")%>%
rename("OTU_ID"="sequence")%>%
select(MAG,clean_MAG:species,`Indicator taxa`,vOTU,viral_tax,lifestyle,iphop,phase,host)%>%
unique%>%
mutate(ph_prediction=case_when(iphop=="TRUE"&phase=="TRUE"~"both",
iphop=="TRUE"&phase=="FALSE"~"iphop",
iphop=="FALSE"&phase=="TRUE"~"phase"))%>%
select(-iphop,-phase)
round(length(unique(v_mag_indicator_reps$MAG))/length(unique(ip_ph_compare$MAG))*100)
length(unique(v_mag_indicator_reps$MAG))
length(unique(ip_ph_compare$MAG))
round(length(unique(v_mag_indicator_reps$vOTU))/length(unique(ip_ph_compare$vOTU))*100)
length(unique(v_mag_indicator_reps$vOTU))
length(unique(ip_ph_compare$vOTU))*100)
length(unique(ip_ph_compare$vOTU))*100
length(unique(v_mag_indicator_reps$vOTU))
length(unique(ip_ph_compare$vOTU))
v_mag_indicator_reps[,c("MAG","ph_prediction")]
length(unique(v_mag_indicator_reps[,c("MAG","ph_prediction")])[v_mag_indicator_reps$ph_prediction=="phase"])
unique(v_mag_indicator_reps[,c("MAG","ph_prediction")])
length(unique(v_mag_indicator_reps[,c("MAG","ph_prediction")])[v_mag_indicator_reps$ph_prediction=="phase",])
length(unique(v_mag_indicator_reps[,c("MAG","ph_prediction")])[,v_mag_indicator_reps$ph_prediction=="phase"])
view(unique(v_mag_indicator_reps[,c("MAG","ph_prediction")])[,v_mag_indicator_reps$ph_prediction=="phase"])
(unique(v_mag_indicator_reps[,c("MAG","ph_prediction")]))[v_mag_indicator_reps$ph_prediction=="phase",]
#MAG representatives of the singleM indicators
v_mag_indicator_reps<-fread("../../data/results/tables/mag_motu_indicator_reps_pha.csv")%>%
rename("OTU_ID"="sequence")%>%
select(MAG,clean_MAG:species,`Indicator taxa`,vOTU,viral_tax,lifestyle,iphop,phase,host)%>%
unique%>%
mutate(ph_prediction=case_when(iphop=="TRUE"&phase=="TRUE"~"both",
iphop=="TRUE"&phase=="FALSE"~"iphop",
iphop=="FALSE"&phase=="TRUE"~"phase"))%>%
select(-iphop,-phase)%>%
as.data.frame
length((unique(v_mag_indicator_reps[,c("MAG","ph_prediction")]))[v_mag_indicator_reps$ph_prediction=="phase",])
(unique(v_mag_indicator_reps[,c("MAG","ph_prediction")]))[v_mag_indicator_reps$ph_prediction=="phase",]
(unique(v_mag_indicator_reps[,c("MAG","ph_prediction")]))
indicator_species_mag_count[indicator_species_mag_count$host=="Mimon crenulatum",]
length(unique(v_mag_indicator_reps[,c("MAG","ph_prediction")])[v_mag_indicator_reps$ph_prediction=="phase",])
view(unique(v_mag_indicator_reps[,c("MAG","ph_prediction")])[v_mag_indicator_reps$ph_prediction=="phase",])
unique(v_mag_indicator_reps[,c("MAG","ph_prediction")])[,v_mag_indicator_reps$ph_prediction=="phase"]
v_mag_indicator_reps$ph_prediction
v_mag_indicator_reps %>%
distinct(MAG, ph_prediction) %>%
filter(ph_prediction == "phase") %>%
nrow()
nrow(unique(v_mag_indicator_reps[, c("MAG", "ph_prediction")])[v_mag_indicator_reps[!duplicated(v_mag_indicator_reps[, c("MAG", "ph_prediction")]), "ph_prediction"] == "phase", ])
unique(v_mag_indicator_reps[, c("MAG", "ph_prediction")])[v_mag_indicator_reps[!duplicated(v_mag_indicator_reps[, c("MAG", "ph_prediction")]), "ph_prediction"] == "phase", ]
```
nrow(unique(v_mag_indicator_reps[, c("MAG", "ph_prediction")])[v_mag_indicator_reps[!duplicated(v_mag_indicator_reps[, c("MAG", "ph_prediction")]), "ph_prediction"] == "iphop", ])
nrow(unique(v_mag_indicator_reps[, c("MAG", "ph_prediction")])[v_mag_indicator_reps[!duplicated(v_mag_indicator_reps[, c("MAG", "ph_prediction")]), "ph_prediction"] == "both", ])
# SingleM reps in p-h pairing
#MAG representatives of the singleM indicators
v_mag_indicator_reps<-fread("../../data/results/tables/mag_motu_indicator_reps_pha.csv")%>%
rename("OTU_ID"="sequence")%>%
select(MAG,clean_MAG:species,`Indicator taxa`,vOTU,viral_tax,lifestyle,iphop,phase,host)%>%
unique%>%
mutate(ph_prediction=case_when(iphop=="TRUE"&phase=="TRUE"~"both",
iphop=="TRUE"&phase=="FALSE"~"iphop",
iphop=="FALSE"&phase=="TRUE"~"phase"))%>%
select(-iphop,-phase)%>%
as.data.frame
v_mag_indicator_reps_agger<- unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(clean_MAG)%>%
summarise(n_mOTU_ID=n_distinct(OTU_ID),
n_indic_taxa=n_distinct(`Indicator taxa`),
indic_taxa=paste(unique(`Indicator taxa`),collapse = " - "),
n_bat_host=n_distinct(host),
bat_host=paste(unique(host),collapse = " - "))
v_mag_indicator_reps_agger<- unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(clean_MAG)%>%
summarise(n_mOTU_ID=n_distinct(OTU_ID),
n_indic_taxa=n_distinct(`Indicator taxa`),
indic_taxa=paste(unique(`Indicator taxa`),collapse = " - "),
n_bat_host=n_distinct(host),
bat_host=paste(unique(host),collapse = " - "))
indicator_species_mag_count<-unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
aggregate(cbind(`Indicator taxa`,host)~clean_MAG, function(x)paste(unique(x), collapse = " - "))
v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])
v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")]
names(v_mag_indicator_reps\)
names(v_mag_indicator_reps)
#MAG representatives of the singleM indicators
v_mag_indicator_reps<-fread("../../data/results/tables/mag_motu_indicator_reps_pha.csv")%>%
rename("OTU_ID"="sequence")%>%
select(OTU_ID,MAG,clean_MAG:species,`Indicator taxa`,vOTU,viral_tax,lifestyle,iphop,phase,host)%>%
unique%>%
mutate(ph_prediction=case_when(iphop=="TRUE"&phase=="TRUE"~"both",
iphop=="TRUE"&phase=="FALSE"~"iphop",
iphop=="FALSE"&phase=="TRUE"~"phase"))%>%
select(-iphop,-phase)%>%
as.data.frame
nrow(unique(v_mag_indicator_reps[, c("MAG", "ph_prediction")])[v_mag_indicator_reps[!duplicated(v_mag_indicator_reps[, c("MAG", "ph_prediction")]), "ph_prediction"] == "both", ])
# SingleM reps in p-h pairing
#MAG representatives of the singleM indicators
v_mag_indicator_reps<-fread("../../data/results/tables/mag_motu_indicator_reps_pha.csv")%>%
rename("OTU_ID"="sequence")%>%
select(OTU_ID,MAG,clean_MAG:species,`Indicator taxa`,vOTU,viral_tax,lifestyle,iphop,phase,host)%>%
unique%>%
mutate(ph_prediction=case_when(iphop=="TRUE"&phase=="TRUE"~"both",
iphop=="TRUE"&phase=="FALSE"~"iphop",
iphop=="FALSE"&phase=="TRUE"~"phase"))%>%
select(-iphop,-phase)%>%
as.data.frame
v_mag_indicator_reps_agger<- unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
group_by(clean_MAG)%>%
summarise(n_mOTU_ID=n_distinct(OTU_ID),
n_indic_taxa=n_distinct(`Indicator taxa`),
indic_taxa=paste(unique(`Indicator taxa`),collapse = " - "),
n_bat_host=n_distinct(host),
bat_host=paste(unique(host),collapse = " - "))
indicator_species_mag_count<-unique(v_mag_indicator_reps[,c("clean_MAG","OTU_ID","Indicator taxa","host")])%>%
aggregate(cbind(`Indicator taxa`,host)~clean_MAG, function(x)paste(unique(x), collapse = " - "))
unique(v_mag_indicator_reps[v_mag_indicator_reps$iphop==""])
unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])
table(unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])$lifestyle)
unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])$lifestyle
unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])[unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])$lifestyle=="lytic"]
unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])[unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])$lifestyle=="lytic",]
length(unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])[unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])$lifestyle=="lytic",])
nrow(unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])[unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])$lifestyle=="lytic",])
round(length(unique(v_mag_indicator_reps$vOTU))
)
nrow(unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])[unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])$lifestyle=="lysogenic",])
nrow(unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])[unique(v_mag_indicator_reps[,c("vOTU","lifestyle")])$lifestyle=="unclear",])
round(length(unique(v_mag_indicator_reps$OTU_ID))/sum(ind_sp$total_mOTUs)*100)
sum(ind_sp$total_mOTUs)
length(unique(v_mag_indicator_reps$OTU_ID))
length(unique(v_mag_indicator_reps$OTU_ID))
unique(v_mag_indicator_reps[,c("MAG","phylum")])
table(unique(v_mag_indicator_reps[,c("MAG","phylum")])$phylum)
fam_string_join(host_fam_count,df_filtered[3,1])[[2]]
fam_string_join(host_fam_count,df_filtered[3,1])
df_filtered[3,1]
host_fam_count
table(unique(v_mag_indicator_reps[,c("MAG","phylum")])$phylum)
table(unique(v_mag_indicator_reps[,c("MAG","phylum","host_family")])[]v_mag_indicator_reps[,c("MAG","phylum","host_family")],)
table(unique(v_mag_indicator_reps[,c("MAG","phylum","host_family")])[]v_mag_indicator_reps[,c("MAG","phylum","host_family"),])
table(unique(v_mag_indicator_reps[,c("MAG","phylum","host_family")])[v_mag_indicator_reps[,c("MAG","phylum","host_family"),])
table(unique(v_mag_indicator_reps[,c("MAG","phylum","host_family")])[unique(v_mag_indicator_reps[,c("phylum","host_family")]))
table(unique(v_mag_indicator_reps[,c("MAG","phylum","host_family")])[,c("phylum","host_family")])
table(unique(v_mag_indicator_reps[,c("MAG","phylum","species")])[,c("phylum","species")])
table(unique(v_mag_indicator_reps[,c("MAG","phylum","genus")])[,c("phylum","genus")])
table(unique(v_mag_indicator_reps[,c("MAG","phylum","host_family","genus")])[,c("phylum","host_family","genus")])
table(unique(v_mag_indicator_reps[,c("MAG","phylum","Indicatory species)])[,c("phylum","Indicator species")])
table(unique(v_mag_indicator_reps[,c("MAG","phylum","Indicatory species")])[,c("phylum","Indicator species")])
table(unique(v_mag_indicator_reps[,c("MAG","phylum","Indicatory taxa")])[,c("phylum","Indicator taxa")])
table(unique(v_mag_indicator_reps[,c("MAG","phylum","Indicator taxa")])[,c("phylum","Indicator taxa")])
view(table(unique(v_mag_indicator_reps[,c("MAG","phylum","Indicator taxa")])[,c("phylum","Indicator taxa")]))
view(table(unique(v_mag_indicator_reps[,c("MAG","phylum","host_family", "genus")])[,c("phylum","host_family", "genus")]))
view(table(unique(v_mag_indicator_reps[,c("MAG","phylum","host_family", "genus")]))
)
unique(ip_ph_compare[, c("MAG", "phylum","host_family","genus","species")])
unique(ip_ph_compare[, c("MAG", "phylum","host_family","genus","species")]) %>%
mutate(num_mags=1)%>%
aggregate(num_mags ~ phylum+host_family,genus,species, sum) %>%
arrange(desc(num_mags))
unique(v_mag_indicator_reps[, c("MAG", "phylum","host_family","genus","species")]) %>%
mutate(num_mags=1)%>%
aggregate(num_mags ~ phylum+host_family,genus,species, sum) %>%
arrange(desc(num_mags))
unique(v_mag_indicator_reps[, c("MAG", "phylum","host_family","genus","species")])
unique(v_mag_indicator_reps[, c("MAG", "phylum","host_family","genus","species")]) %>%
mutate(num_mags=1)
# Characterizing the taxa of the indicator MAGs
in_mag_taxa <- unique(v_mag_indicator_reps[, c("MAG", "phylum","host_family","genus","species")]) %>%
mutate(num_mags=1)%>%
aggregate(num_mags ~ phylum+host_family+genus+species, sum) %>%
arrange(desc(num_mags)) %>%
filter(num_mags >= 10)
# Characterizing the taxa of the indicator MAGs
in_mag_taxa <- unique(v_mag_indicator_reps[, c("MAG", "phylum","host_family","genus","species")]) %>%
mutate(num_mags=1)%>%
aggregate(num_mags ~ phylum+host_family+genus+species, sum) %>%
arrange(desc(num_mags)) #%>%
view(in_mag_taxa)
#Function for genus counting
gen_string_join<-function(df,phy){
phy_select<-df%>%
filter(phylum==phy)
fam_join<-join_with_and(phy_select$host_family)
num_join<-join_with_and(phy_select$num_mags)
return(list(fam_join,num_join))
}
df_filtered
in_mag_taxa
unique(v_mag_indicator_reps[, c("MAG", "phylum")]) %>%
mutate(num_mags=1)%>%
aggregate(num_mags ~ phylum, sum)
#Phylum count
in_mag_phy_count <- unique(v_mag_indicator_reps[, c("MAG", "phylum")]) %>%
mutate(num_mags=1)%>%
aggregate(num_mags ~ phylum, sum) %>%
arrange(desc(num_mags))
in_mag_phy_count
gen_string_join(in_mag_taxa,in_mag_phy_count[1,1])
in_mag_phy_count[1,1]
in_mag_phy_count[1,2]
gen_string_join(in_mag_taxa,in_mag_phy_count[1,1])
`r gen_string_join(in_mag_taxa,in_mag_phy_count[1,1])[2]`
gen_string_join(in_mag_taxa,in_mag_phy_count[1,1])
gen_string_join(in_mag_taxa,in_mag_phy_count[1,1])[[2]]
gen_string_join(in_mag_taxa,in_mag_phy_count[1,1])[1]`
gen_string_join(in_mag_taxa,)
``
gen_string_join(in_mag_taxa,in_mag_phy_count[1,1])[[1]]
in_mag_phy_count[1,2]
in_mag_phy_count[2,1]
in_mag_phy_count[2,2]
in_mag_taxa,in_mag_phy_count[1,1]
in_mag_phy_count[3,2]
in_mag_phy_count[3,1]
gen_string_join(in_mag_taxa,in_mag_phy_count[3,1])[[2]]
gen_string_join(in_mag_taxa,in_mag_phy_count[3,1])[[1]]
# Characterizing the taxa of the indicator MAGs
in_mag_taxa <- unique(v_mag_indicator_reps[, c("MAG", "phylum","host_family","genus")]) %>%
mutate(num_mags=1)%>%
aggregate(num_mags ~ phylum+host_family+genus+species, sum) %>%
arrange(desc(num_mags))
# Characterizing the taxa of the indicator MAGs
in_mag_taxa <- unique(v_mag_indicator_reps[, c("MAG", "phylum","host_family","genus")]) %>%
mutate(num_mags=1)%>%
aggregate(num_mags ~ phylum+host_family+genus, sum) %>%
arrange(desc(num_mags))
#Function for genus counting
gen_string_join<-function(df,phy){
phy_select<-df%>%
filter(phylum==phy)
fam_join<-join_with_and(phy_select$host_family)
num_join<-join_with_and(phy_select$num_mags)
return(list(fam_join,num_join))
}
#Phylum count
in_mag_phy_count <- unique(v_mag_indicator_reps[, c("MAG", "phylum")]) %>%
mutate(num_mags=1)%>%
aggregate(num_mags ~ phylum, sum) %>%
arrange(desc(num_mags))
#Function for genus counting
gen_string_join<-function(df,phy){
phy_select<-df%>%
filter(phylum==phy)
fam_join<-join_with_and(phy_select$genus)
num_join<-join_with_and(phy_select$num_mags)
return(list(fam_join,num_join))
}
view(in_mag_taxa)
view( unique(v_mag_indicator_reps[, c("MAG", "phylum","host_family","genus","species")]))
view(v_mag_indicator_reps)
votu_amr_genes_ph<-fread("/projects/raw_lab/projects/Bats/bat_gut_micro/phasegenome_out/data/results/tables/phyllostomus_hastatus_amr_genes.csv")
library(data.table)
library(data.table)
library(tidyverse)
library(phyloseq)
votu_amr_genes_ph<-fread("/projects/raw_lab/projects/Bats/bat_gut_micro/phasegenome_out/data/results/tables/phyllostomus_hastatus_amr_genes.csv")
votu_amr_genes_mc<-fread("/projects/raw_lab/projects/Bats/bat_gut_micro/phasegenome_out/data/results/tables/Mimon_crenulatum_amr_genes.csv")
votu_amr_genes_ph<-fread("../../data/results/tables/phyllostomus_hastatus_amr_genes.csv")
votu_amr_genes_mc<-fread("../../data/results/tables/Mimon_crenulatum_amr_genes.csv")
votu_amr_genes_ph
knitr::include_graphics("../../data/results/MAG_AMR_Venn_diet.pdf")
knitr::include_graphics("../../data/results/figures/MAG_AMR_Venn_diet.pdf")
